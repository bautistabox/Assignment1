5a. 
	$ git push -u origin master

	Counting objects: 7, done.
	Delta compression using up to 4 threads.
	Compressing objects: 100% (5/5), done.	
	Writing objects: 100% (7/7), 753 bytes | 753.00 KiB/s, done.
	Total 7 (delta 2), reused 0 (delta 0)
	remote: Resolving deltas: 100% (2/2), completed with 1 local object.
	To https://github.com/bautistabox/Assignment1.git
	   fbdbe93..0aacd6b  master -> master
	Branch master set up to track remote branch master from origin.


5b.
	NINE COMMITS

	$ git log


5c.
	 Wed Sep 27 16:31:42 2017

	$ git log .gitignore

5d.
	commit cb30d72a3d94c108f393c163a35c1cc9bf18ffca
	commit 36a8e55e4bbdd171ab57d979e1a802d740f2db9b

5e.
	Branching makes sure that unstable code does not get committed to 
	main code base and it gives the developer a chance to make sure his/her
	code is clean before it is merged with the main branch.

5f.
	git log tells you all of the commits made to the repository
	git status tells you if your repository is in sync with the main base

5g.
	git log Weapon.h

5h.
	git log --grep file

5i.
	* Inheritance enables new objects to take on properties of other objects.
	You can have a child class that inheritates data and functions from a 
	parent class.
	* Polymorphism refers to being able to generalize a functionality to a 
	larger group. Like one function that can calculate the area of a circle,
	rectangle and triangles (function overloading).
	* Encapsulation is the concept of hiding functionality and data from the 
	user. Just like a car puts all of the complex components under a hood, 
	OOP encapsulates most functions and data in a private section of code.
 
	
	
	
7.	
	The RoleGame prototype is using Polymorphism. Each instance of the
	weapon class has a different implementation for a hit() function. 
	The prototype also uses encapsulation in terms of have a protected 
	section of code. This section of code is accessable by children of 
	the class but it is still protected from outside users, only available
	through accessor functions.	
